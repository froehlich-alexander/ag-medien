@import "base";

.widget {
  position: relative;

  &.show {
  }

  &:not(.show) {
    display: none !important;
  }

  &:not(.show).hidingIfNotShown {
    display: inherit;
    visibility: hidden !important;
  }

  .icon-widget {
    display: inline-block;

    &:not(.show) {
      display: inherit;
      visibility: hidden;
    }

    //font-size: 2rem;
  }

  &.button-widget {
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(1.3 * 1.5rem + 1rem); //line-height * fontsize + padding
    box-sizing: border-box;
    padding: 0.5rem 1rem;
    text-align: center;
    cursor: pointer;
    border-radius: 2rem;
    background-color: var(--background-color-2);
    position: relative;

    &:hover {
      background-color: var(--background-color-3);
    }

    .text {
      //vertical-align: middle;
      text-align: center;
      font-size: 1.25rem;
      font-weight: bold;
      line-height: 1.3;
    }
  }

  &.flex-box-widget {
    display: flex;
    //position: relative;
    //padding: 0.5rem 0;
    box-sizing: border-box;
    //background-color: var(--background-color-1);
    //border-radius: 1rem;
    align-items: center;
    //justify-content: space-evenly;
    //column-gap: 5%;
    //width: 80%;
    //height: 20%;
    //top: 40%;
    //left: 10%;

    //.spacer {
    //  &.align-spacer {
    //  }
    //
    //  &.start-spacer {
    //  }
    //
    //  &.end-spacer {
    //
    //  }
    //
    //  &.item-spacer {
    //  }
    //}

    //these classes point to the start / end item of each alignment block
    .start-of-start, .end-of-end {
    }

    .end-of-center {
      margin-right: auto;
    }

    .start-of-center {
      margin-left: auto;
    }

    //these classes indicate whether there are items in the flexbox with the specified alignment
    &.start, &.end, &.center {
    }

    //add auto margin to start and end items if center items are absent
    &:not(.center) {
      .start-of-end {
        @extend .start-of-center;
      }

      .end-of-start {
        @extend .end-of-center;
      }
    }
  }

  &.title-widget {
    background-color: var(--background-color-3);
    //top: 20%;
    //left: 30%;
    //height: 30%;
    //width: 50%;
    border-radius: 1rem;
    position: relative;

    .text {
      //width: calc(100% - #{$close-icon-width} - 2 * #{$w-padding});
      height: 100%;
      box-sizing: border-box;
      text-align: center;
      vertical-align: middle;
      justify-self: center;
      font-size: 2rem;
      display: inline-block;
    }

    .icon {
      height: 2rem;
      font-size: 2rem;
      user-select: none;
      cursor: pointer;
      vertical-align: middle;
      display: inline-block;
    }

    &.default {
      position: relative;
      font-size: 1.5rem;
      border-radius: 1rem;
      padding: 0.5rem 0;
      margin-bottom: 0.5rem;
      background-color: var(--background-color-3);
      width: 100%;
      box-sizing: border-box;
    }
  }

  &.text-widget {

  }

  &.list-tile-widget {
    .icon-widget {
      height: 100%;
      vertical-align: center;
    }

    &.default-item {
      padding: 1rem;
      margin: 0.5rem;
      border-radius: 1rem;
      font-size: 1rem;
      background-color: var(--background-color-2);

      &:hover {
        background-color: var(--background-color-3);
      }

      &.checked {
        background-color: var(--background-color-4);
      }

      &.checkable {
        cursor: pointer;
      }
    }
  }

  &.overlay-widget {
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    user-select: none;
    position: fixed;
    background-color: rgba(black, 0.5);
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &.text-input {
    position: relative;
    //left: 30%;
    //top: 30%;
    margin-top: 10px;
    padding: 15px 0 0;
    $primary: #2962ff;

    .underline {
      transition: all 0.2s ease-out;
      content: "";
      display: block;
      position: absolute;
      height: 2px;
      background-color: $primary;
      width: 0;
      left: 0;
      bottom: -1px;
    }

    .field {
      font-family: inherit;
      width: 100%;
      border: 0;
      border-bottom: 1px solid gray;
      outline: 0;
      font-size: 1.3rem;
      color: var(--color);
      padding: 7px 0;
      background: none;

      &::placeholder {
        color: transparent;
      }

      &:placeholder-shown ~ .label {
        font-size: 1.3rem;
        cursor: text;
        top: 20px;
      }

      &:focus {
        ~ .label {
          position: absolute;
          top: 0;
          display: block;
          font-size: 1rem;
          color: $primary;
          transition: all 0.2s ease-out;
        }

        &:placeholder-shown {
          &::placeholder {
            color: var(--color);
          }
        }

        ~ .underline {
          width: 100%;
        }

        padding-bottom: 6px;
      }

      &:required, &:invalid {
        box-shadow: none;
      }
    }

    .label {
      position: absolute;
      top: 0;
      display: block;
      transition: all 0.2s;
      font-size: 1rem;
      color: var(--color);
    }
  }

  &.dialog-widget {
    border-radius: 1rem;
    background-color: var(--background-color-1);
    position: relative;
    padding-bottom: 0.5rem;
    //left: 50%;
    //top: 50%;
    //margin: {
    //  top: auto;
    //  bottom: auto;
    //  left: auto;
    //  right: auto;
    //}
  }

  &.box {
    box-sizing: border-box;

    &.default-content {
      padding: 0 0.5rem;
      overflow-y: auto;
      scrollbar-width: thin;
      border-radius: 1rem;
    }
  }

  &.button-box-widget {
    align-self: end;
    padding-top: 1rem;
    border-radius: 1rem;
  }

  &.select-box-widget {
    box-sizing: border-box;
    width: 100%;
    max-height: 50%;
    margin: 0 auto;
    font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
    font-size: 18px;
    color: #60666d;
    border-radius: 1rem;
    overflow-y: auto;

    .options-view-button {
      position: absolute;
      height: 100%;
      width: 100%;
      left: 0;
      top: 0;
      opacity: 0;
      cursor: pointer;
      margin: 0;
      padding: 0;
      z-index: 1;
    }

    .current {
      position: relative;
      //box-shadow: 0 15px 30px - 10px transparentize(#000, 0.9);
      cursor: pointer;
      outline: none;
      //border: 1px solid gray;
      border-radius: 1rem;
      background-color: var(--background-color-3);

      .options-view-button:checked { //&:has(.options-view-button:checked) is currently not supported by browsers (except safari) so this has to be done via js
        & + .icon {
          transform: translateY(-50%) rotate(180deg);
        }
      }

      &.options-view-button-checked { //class which gets applied to .current via js
        & + ul {
          opacity: 1;
          display: inline-block;

          // We have to set "animation-name: none;" to make the list visible (read below how it works)

          animation-name: none;

          .option {
            cursor: pointer;
          }
        }
      }

      //&:has(.options-view-button:checked){ //&:has(.options-view-button:checked) is currently not supported by browsers (except safari) (04.2022)
      //  & + ul {
      //    opacity: 1;
      //
      //    // We have to set "animation-name: none;" to make the list visible (read below how it works)
      //
      //    animation-name: none;
      //
      //    .option {
      //      cursor: pointer;
      //    }
      //  }
      //
      //  .icon {
      //    transform: translateY(-50%) rotate(180deg);
      //  }
      //}

      $icon-width: 30px;

      .value {
        display: flex;
        overflow: hidden;
        max-width: calc(100% - #{$icon-width});

        input {
          display: none;

          &:checked + .input-text {
            display: block;
          }
        }

        .input-text {
          display: none;
          width: 100%;
          margin: 0;
          padding: 15px;
        }
      }

      .icon {
        //background-color: white;
        position: absolute;
        top: 50%;
        right: 0;
        padding: 0 3px;
        transform: translateY(-50%);
        width: $icon-width;
        transition: 0.2s ease;
        box-sizing: border-box;
      }
    }

    ul {
      position: relative;
      width: 100%;
      padding: 0;
      list-style: none;
      opacity: 0;
      display: none;
      background-color: var(--background-color-0);
      //border: black 1px solid;
      //border-top: black 1px solid;
      //border-style: wave;
      border-radius: 1rem;

      // We need to use animation with delay.
      // Otherwise the click event will not have time to run on label, because this element disappears immediately when .select-box__current element loses the focus.
      // This delay will not be noticed because we set "opacity" to "0".
      // We also use "animation-fill-mode: forwards" to make the list stay hidden.

      animation-name: HideList;
      animation-duration: 0.5s;
      animation-delay: 0.5s;
      animation-fill-mode: forwards;
      animation-timing-function: step-start;
      box-shadow: 0 15px 30px -10px transparentize(#000, 0.9);

      li {
        border-top: 1px solid var(--background-color-2);
      }

      li:first-of-type {
        border-top: none;
        border-top-left-radius: 1rem;
        border-top-right-radius: 1rem;
      }

      li:last-of-type {
        border-bottom: none;
        border-bottom-left-radius: 1rem;
        border-bottom-right-radius: 1rem;
      }

      li:hover,
      li:focus {
        //color: #546c84;
        background-color: var(--background-color-2);
      }

      .option {
        box-sizing: border-box;
        display: block;
        overflow: hidden;
        width: 100%;
        padding: 15px;
      }
    }
  }

  @keyframes HideList {
    from {
      transform: scaleY(1);
    }
    to {
      transform: scaleY(0);
    }
  }

}